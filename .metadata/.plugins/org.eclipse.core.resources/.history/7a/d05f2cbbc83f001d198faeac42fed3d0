package com.example.spring02.service.pdf;

import java.io.FileOutputStream;
import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import com.example.spring02.model.shop.dto.CartDTO;
import com.example.spring02.service.shop.CartService;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

@Service
public class PdfServiceImpl implements PdfService {

	@Inject
	CartService cartService;
	
	@Override
	public String createPdf() {
		String result="";
		try {
			//pdf문서객체 생성
			Document document = new Document();
			//pdf생성객체
			PdfWriter writer=PdfWriter.getInstance(//c드라이브의 test폴더에 sample.pdf라는 파일 생성시킴
					document, new FileOutputStream("c:/test/sample.pdf"));
			document.open();
			//한글이 지원되는 폰트 지정
			BaseFont baseFont=BaseFont.createFont("C:/Windows/Fonts/gulim.ttc",
					BaseFont.IDENTITY_H,BaseFont.EMBEDDED);
			//폰트 사이즈 지정
			Font font=new Font(baseFont,12);
			//테이블(4컬럼)
			PdfPTable table = new PdfPTable(4);// PdfPTable(컬럼갯수)
			//Chunk:문단처리(웹의 p태그와 비슷), 텍스트의 내용 처리
			Chunk chunk = new Chunk("장바구니", font);
			Paragraph ph = new Paragraph(chunk);
			ph.setAlignment(Element.ALIGN_CENTER);
			document.add(ph);
			document.add(chunk.NEWLINE);//줄바꿈
			document.add(chunk.NEWLINE);
			//PdfPCell : <td>와 같은 기능
			PdfPCell cell1=new PdfPCell(new Phrase("상품명",font));
			PdfPCell cell2=new PdfPCell(new Phrase("단가",font));
			PdfPCell cell3=new PdfPCell(new Phrase("수량",font));
			PdfPCell cell4=new PdfPCell(new Phrase("금액",font));
			//가운데정렬
			cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
			cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
			cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
			cell4.setHorizontalAlignment(Element.ALIGN_CENTER);
			//테이블에 셀 추가
			table.addCell(cell1);
			table.addCell(cell2);
			table.addCell(cell3);
			table.addCell(cell4);
			//장바구니 목록 리턴, 
			List<CartDTO> items=cartService.listCart("kim");
			for(int i=0;i<items.size(); i++) {
				CartDTO dto=items.get(i);//i번째 레코드를 dto에 저장
				PdfPCell cellProductName = new PdfPCell(new Phrase(dto.getProduct_name(),font));
			}
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		return ;
	}

}
