package com.example.spring02.controller.upload;

import java.io.InputStream;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.example.spring02.util.UploadFileUtils;

@Controller
public class AjaxUploadController {
	//로깅
	private static final Logger logger
	=LoggerFactory.getLogger(AjaxUploadController.class);
	
	//업로드 디렉토리
	@Resource(name = "uploadPath")
	String uploadPath; //c:/upload
	
	@RequestMapping(value = "/upload/uploadAjax", method = RequestMethod.GET)
	public String uploadAjax() {
		return "/upload/uploadAjax";//포워딩
	}
	
	@ResponseBody //객체를 json 형식으로 데이터 리턴
	@RequestMapping(value = "/upload/uploadAjax"
			, method = RequestMethod.POST
			, produces = "text/plain;charset=utf-8")//한글이 깨지지 않도록 처리
	//업로드한 파일정보와 Http 상태코드를 함께 리턴
	public ResponseEntity<String> uploadAjax(MultipartFile file) throws Exception {
		//View의 이름이 아니라 data 자체를 보내는 처리
		return new ResponseEntity<String>(UploadFileUtils.uploadFile(uploadPath, 
				file.getOriginalFilename(), file.getBytes()), HttpStatus.OK);
		//파일성공여부는 uploadAjax.jsp의 function(data,status,req)으로 넘어감
	}
	@ResponseBody
	@RequestMapping("/upload/displayFile")
	public ResponseEntity<byte[]> displayFile(String fileName) throws Exception{
		//서버의 파일을 다운로드 하기위한 스트림
		InputStream in = null;
		ResponseEntity<byte[]> entity = null;
		try {
			//확장자 검사
			String formatName = fileName.substring(fileName.lastIndexOf(".")+1);
			MediaType mType = MediaUtils.getMediaType(formatName);
			//헤더구성객체
			HttpHeaders headers= new HttpHeaders();
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
}
